type Directory @entity {
  id: Bytes!
  index: BigInt!
  volume: BigInt!
  treasuryFees: BigInt!
}

type Account @entity {
  id: Bytes!
  providerFees: BigInt!
  collectionFees: BigInt!
  leaderFees: BigInt!
  referrals: BigInt!
  swaps: [Swap!]! @derivedFrom(field: "account")
  tokenPositions: [TokenPosition!]! @derivedFrom(field: "account")
}

enum PriceChange {
  UP
  DOWN
}

type Token @entity {
  id: Bytes!
  name: String!
  symbol: String!
  uri: String!
  creator: Bytes!
  leader: Bytes!
  contributed: BigInt!
  marketPrice: BigInt!
  priceChange: PriceChange!
  circulatingSupply: BigInt!
  marketCap: BigInt!
  volume: BigInt!
  contributors: BigInt!
  holders: BigInt!
  isOpen: Boolean!
  openAt: BigInt!
  swaps: [Swap!]! @derivedFrom(field: "token")
  tokenPositions: [TokenPosition!]! @derivedFrom(field: "token")
}

type TokenPosition @entity {
  id: ID!
  account: Account!
  token: Token!
  contributed: BigInt!
  balance: BigInt!
  created: Boolean!
  leader: Boolean!
}

enum Action {
  BUY
  SELL
}

type Swap @entity {
  id: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
  account: Account!
  token: Token!
  action: Action!
  baseIn: BigInt!
  baseOut: BigInt!
  tokenIn: BigInt!
  tokenOut: BigInt!
  marketPrice: BigInt!
  floorPrice: BigInt!
}

type SwapHourData @entity {
  id: ID!
  token: Token!
  timestamp: BigInt!
  marketPrice: BigInt!
  floorPrice: BigInt!
  hourlyVolume: BigInt!
}

type SwapDayData @entity {
  id: ID!
  token: Token!
  timestamp: BigInt!
  marketPrice: BigInt!
  floorPrice: BigInt!
  dailyVolume: BigInt!
}
