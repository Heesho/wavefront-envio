type Directory {
  id: ID!
  index: BigInt!
  volume: BigInt!
  fees: BigInt!
}

type Account {
  id: ID!
  providerFees: BigInt!
  collectionFees: BigInt!
  leaderFees: BigInt!
  rederrals: BigInt!
  tokenPositions: [TokenPosition!]! @derivedFrom(field: "account")
}

type Token {
  id: ID!
  name: String!
  symbol: String!
  uri: String!
  creator: String!
  leader: String!
  contributed: BigInt!
  marketPrice: BigInt!
  supply: BigInt!
  marketCap: BigInt!
  volume: BigInt!
  holders: BigInt!
  tokenPositions: [TokenPosition!]! @derivedFrom(field: "token")
}

type TokenPosition {
  id: ID!
  token: Token!
  account: Account!
  contributed: BigInt!
  balance: BigInt!
  leader: Boolean!
  creator: Boolean!
}

type TokenHourData {
  id: ID!
  timestamp: BigInt!
  token: Token!
  marketPrice: BigInt!
  hourlyVolume: BigInt!
}

type TokenDayData {
  id: ID!
  timestamp: BigInt!
  token: Token!
  marketPrice: BigInt!
  dailyVolume: BigInt!
}

type Swap {
  id: ID!
  blockNumber: BigInt!
  timestamp: BigInt!
  token: Token!
  from: String!
  to: String!
  provider: String!
  buy: Boolean!
  sell: Boolean!
  tokenIn: BigInt!
  tokenOut: BigInt!
  baseIn: BigInt!
  baseOut: BigInt!
  marketPrice: BigInt!
}
